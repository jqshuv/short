name: üöÄ Deploy

on:
  push:
    tags:
      - 'v/*'
  workflow_dispatch:

jobs:
  test:
    name: üß™ Test
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: üì¶ Install pnpm
        uses: pnpm/action-setup@v4
        with:
            version: 9
      - name: üì¶ Install Node.js 20
        uses: actions/setup-node@v4
        with:
            node-version: 20.x
            cache: 'pnpm'
      - name: üíΩ Setup Enviroment
        run: |
          cp wrangler.example.toml wrangler.toml
          echo "[vars]" >> wrangler.toml
          echo "AUTH_SECRET = \"production_value\" " >> wrangler.toml
          echo "[[kv_namespaces]]" >> wrangler.toml
          echo "binding = \"SHORT_URLS\"" >> wrangler.toml
          echo "id = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"" >> wrangler.toml
        env:
          KV_NAMESPACE_ID: ${{ secrets.CF_KV_ID }}
      - name: ‚öôÔ∏è Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: üìã Test
        run: pnpm test

  deploy:
    name: üöÄ Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: üì¶ Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: üíΩ Setup Enviroment
        # echo "[vars]" >> wrangler.toml
        # echo "AUTH_SECRET = \"${SHORT_API_KEY}\" " >> wrangler.toml
        run: |
          cp wrangler.example.toml wrangler.toml
          [ -z ${SHORT_API_KEY+x} ] && echo "No API Key" || echo "[vars]" >> wrangler.toml;
          [ -z ${SHORT_API_KEY+x} ] && echo "No API Key" || echo "AUTH_SECRET = \"${SHORT_API_KEY}\" " >> wrangler.toml;
          echo "[[kv_namespaces]]" >> wrangler.toml
          echo "binding = \"SHORT_URLS\"" >> wrangler.toml
          echo "id = \"${KV_NAMESPACE_ID}\"" >> wrangler.toml
        env:
          SHORT_API_KEY: ${{ secrets.SHORT_API_KEY }}
          KV_NAMESPACE_ID: ${{ secrets.CF_KV_ID }}
      - name: üåë Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}

  updateapi:
    name: üìà Change API Version
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: ‚¨áÔ∏è Checkout
        uses: actions/checkout@v4
      - name: üî© Configure Version
        uses: fjogeleit/yaml-update-action@v0.15.0
        with:
          valueFile: 'docs/api-docs.json'
          propertyPath: 'info.version'
          value: '${GITHUB_REF#refs/tags/v}'
          commitChange: true
          message: 'refactor: update API version to ${GITHUB_REF#refs/tags/v}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


