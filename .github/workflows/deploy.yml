name: 🚀 Deploy

on:
  push:
    tags:
      - 'v/*'
  workflow_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
      - name: 📦 Install Node.js 22
        uses: actions/setup-node@v4
        with:
            node-version: 22
            cache: 'pnpm'
      - name: 💽 Setup Enviroment
        run: |
          cp wrangler.example.toml wrangler.toml
          echo "[vars]" >> wrangler.toml
          echo "AUTH_SECRET = \"production_value\" " >> wrangler.toml
          echo "[[kv_namespaces]]" >> wrangler.toml
          echo "binding = \"SHORT_URLS\"" >> wrangler.toml
          echo "id = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"" >> wrangler.toml
        env:
          KV_NAMESPACE_ID: ${{ secrets.CF_KV_ID }}
      - name: ⚙️ Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: 📋 Test
        run: pnpm test

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
      - name: 💽 Setup Enviroment
        # echo "[vars]" >> wrangler.toml
        # echo "AUTH_SECRET = \"${SHORT_API_KEY}\" " >> wrangler.toml
        run: |
          cp wrangler.example.toml wrangler.toml
          [ -z ${SHORT_API_KEY+x} ] && echo "No API Key" || echo "[vars]" >> wrangler.toml;
          [ -z ${SHORT_API_KEY+x} ] && echo "No API Key" || echo "AUTH_SECRET = \"${SHORT_API_KEY}\" " >> wrangler.toml;
          echo "[[kv_namespaces]]" >> wrangler.toml
          echo "binding = \"SHORT_URLS\"" >> wrangler.toml
          echo "id = \"${KV_NAMESPACE_ID}\"" >> wrangler.toml
        env:
          SHORT_API_KEY: ${{ secrets.SHORT_API_KEY }}
          KV_NAMESPACE_ID: ${{ secrets.CF_KV_ID }}
      - name: 🌑 Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
