name: 🎉 Release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release a new version'
        required: true
        default: 'next'
        type: choice
        options:
          - 'patch'
          - 'next'
          - 'next-major'

permissions:
  contents: read

jobs:
  test:
    name: 🧪 Test
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
            version: 9
      - name: 📦 Install Node.js 20
        uses: actions/setup-node@v4
        with:
            node-version: 20.x
            cache: 'pnpm'
      - name: 💽 Setup Enviroment
        run: |
          cp wrangler.example.toml wrangler.toml
          echo "[vars]" >> wrangler.toml
          echo "AUTH_SECRET = \"production_value\" " >> wrangler.toml
          echo "[[kv_namespaces]]" >> wrangler.toml
          echo "binding = \"SHORT_URLS\"" >> wrangler.toml
          echo "id = \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\"" >> wrangler.toml
        env:
          KV_NAMESPACE_ID: ${{ secrets.CF_KV_ID }}
      - name: ⚙️ Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: 📋 Test
        run: pnpm test

  release:
    name: 🎉 Release
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 📦 Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: 📦 Install Node.js 20
        uses: actions/setup-node@v4
        with:
            node-version: 20.x
            cache: 'pnpm'
      - name: ⚙️ Install Dependencies
        run: pnpm install --frozen-lockfile
      - name: 🎉 Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: ${{ github.event.inputs.release }}
        run: pnpx semantic-release
